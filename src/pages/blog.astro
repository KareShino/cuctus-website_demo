---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import BaseLayout from "../layouts/BaseLayout.astro";

// ❶ 日付順にソートしておく
let allPosts = await Astro.glob('../pages/posts/*.md');
allPosts = allPosts.sort(
  (a, b) => new Date(b.frontmatter.pubDate) - new Date(a.frontmatter.pubDate)
);

---
<BaseLayout title="CACTUS公式サイト | ブログ">
  <Header />

  <main>
    <h2>Latest</h2>
    {/* ❷ リストをまとめて出力しておき、CSSまたはJSで表示を制御する */}
    <section class="blog-list" id="blog-list">
      {allPosts.map((post, i) => (
        <article
          class="blog-card"
          style="display: none;" {/* 初期はJS側で制御するため一旦 display:none */}
        >
          <img
            src={post.frontmatter.image.url}
            alt={post.frontmatter.image.alt}
            class="blog-card-image"
          />
          <div class="blog-card-content">
            <h3>
              <a href={post.url}>{post.frontmatter.title}</a>
            </h3>
            <div class="blog-card-meta">
              <img
                src="src/assets/test.jpg"
                alt="Author avatar"
                class="author-avatar"
              />
              <p>{post.frontmatter.author}</p>
              <p>{new Date(post.frontmatter.pubDate).toLocaleDateString()}</p>
            </div>
          </div>
        </article>
      ))}
    </section>

    {/* ❸ ページネーション用ボタン（前へ/次へ） */}
    <div style="margin-top: 1rem;">
      <button id="prevPageBtn" style="display: none;">前へ</button>
      <span id="pageInfo" style="margin: 0 1rem;"></span>
      <button id="nextPageBtn" style="display: none;">次へ</button>
    </div>
  </main>

  <Footer />
</BaseLayout>

{/* ❹ ページネーション制御用スクリプト */}
<script>
  // 定数設定
  const postsPerPage = 3; // 1ページあたり何件表示するか
  let currentPage = 1;    // 現在のページ(1始まり)
  
  const blogList = document.getElementById('blog-list');
  const cards = blogList.querySelectorAll('.blog-card');

  const totalPosts = cards.length;
  const totalPages = Math.ceil(totalPosts / postsPerPage);

  const pageInfo = document.getElementById('pageInfo');
  const prevPageBtn = document.getElementById('prevPageBtn');
  const nextPageBtn = document.getElementById('nextPageBtn');

  // ページを表示する関数
  function showPage(page) {
    // 全カードを一旦非表示
    cards.forEach((card) => {
      card.style.display = 'none';
    });

    // ページに該当するカードだけ表示
    const startIndex = (page - 1) * postsPerPage;
    const endIndex = startIndex + postsPerPage; // endIndex は含まれない
    for (let i = startIndex; i < endIndex && i < totalPosts; i++) {
      cards[i].style.display = 'flex';
    }

    // ページ情報を更新
    pageInfo.textContent = `ページ ${page} / ${totalPages}`;

    // ボタン表示を更新
    prevPageBtn.style.display = page > 1 ? 'inline-block' : 'none';
    nextPageBtn.style.display = page < totalPages ? 'inline-block' : 'none';
  }

  // 初期表示
  showPage(currentPage);

  // 「前へ」ボタン
  prevPageBtn.addEventListener('click', () => {
    if (currentPage > 1) {
      currentPage--;
      showPage(currentPage);
    }
  });

  // 「次へ」ボタン
  nextPageBtn.addEventListener('click', () => {
    if (currentPage < totalPages) {
      currentPage++;
      showPage(currentPage);
    }
  });
</script>

<style>
/* カード全体 */
.blog-card {
  align-items: center;
  gap: 1rem;
  border: 1px solid #ddd;
  border-radius: 8px;
  overflow: hidden;
  background-color: #fff;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  padding: 1rem;
  min-height: 150px; /* 高さを一定に設定 */
  flex-direction: row; /* 常に左:画像、右:コンテンツ */

  /* デフォルトは非表示。JSでページ切り替えの時に display: flex へ */
  display: none;
}

.blog-card:hover {
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
}

/* 左側の画像 */
.blog-card-image {
  width: 150px;
  height: 150px;
  object-fit: cover;
  border-radius: 8px;
}

/* 右側のコンテンツ */
.blog-card-content {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  flex-grow: 1; /* 幅いっぱいに */
  flex-basis: 0;
}

/* タイトル */
.blog-card-content h3 {
  margin: 0;
  font-size: 1.2rem;
  color: #333;
}

.blog-card-content h3 a {
  text-decoration: none;
  color: inherit;
}

.blog-card-content h3 a:hover {
  text-decoration: underline;
}

/* メタ情報 */
.blog-card-meta {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.9rem;
  color: #666;
}

.author-avatar {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  object-fit: cover;
}

/* レスポンシブ: グリッドレイアウト */
.blog-list {
  display: grid;
  gap: 2rem;
  grid-template-columns: 1fr; /* デフォルト1列 */
}

@media (min-width: 768px) {
  .blog-list {
    grid-template-columns: 1fr 1fr; /* 2列 */
  }
}

@media (max-width: 768px) {
  .blog-card {
    flex-direction: row;
    text-align: left;
  }
  .blog-card-meta {
    justify-content: flex-start;
  }
}
</style>
